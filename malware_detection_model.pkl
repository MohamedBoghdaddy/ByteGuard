from sklearn.ensemble import RandomForestClassifier
import joblib
import os

# Example: Features (size, entropy) and labels (benign or malware)
def calculate_entropy(data):
    from collections import Counter
    byte_counts = Counter(data)
    entropy = -sum((count / len(data)) * (count / len(data)).bit_length() for count in byte_counts.values())
    return entropy

def extract_features(file_path):
    size = os.path.getsize(file_path)
    with open(file_path, 'rb') as f:
        data = f.read()
    entropy = calculate_entropy(data)
    return [size, entropy]

# Replace with real file paths and labels
file_paths = ["file1.exe", "file2.exe"]
X = [extract_features(f) for f in file_paths]
y = [0, 1]  # 0: benign, 1: malware

# Train a Random Forest Classifier
model = RandomForestClassifier()
model.fit(X, y)

# Save the trained model
joblib.dump(model, 'malware_detection_model.pkl')
